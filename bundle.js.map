{"version":3,"sources":["webpack:///webpack/bootstrap 338015fbf13be95d2a66","webpack:///./index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA,UAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAW,gBAAgB;AAC3B,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 338015fbf13be95d2a66\n **/","let canvasEl = document.getElementById('canvas'),\n    ctx = canvasEl.getContext('2d');\n\nfunction drawNthCurve(n) {\n  ctx.fillStyle = 'black'\n  const { width, height } = canvasEl\n  ctx.fillRect(0,0,width,height);\n  ctx.strokeStyle = 'white'\n  ctx.beginPath()\n  fillCurve([[0,0],[width,height]],n);\n  ctx.stroke();\n}\n\n// let quadrantPoints = [\n//   [ width / 4, height * 3 / 4 ],\n//   [ width / 4, height / 4 ],\n//   [ width * 3 / 4, height / 4 ],\n//   [ width * 3 / 4, height * 3 / 4 ]\n// ]\n// ctx.moveTo(...quadrantPoints[0])\n// for (let i = 1; i < quadrantPoints.length; i++) {\n//   ctx.lineTo(...quadrantPoints[i])\n// }\n\nfunction center(topLeft,btmRight) {\n  return [\n    (btmRight[0] + topLeft[0]) / 2,\n    (btmRight[1] + topLeft[1]) / 2\n  ]\n}\n\nconst f = {0:0,1:3,2:2,3:1},\n      g = {0:2,1:1,2:0,3:3};\n\nfunction quadrants(square, rflct) {\n  let [x1,y1] = square[0],\n      [x2,y2] = square[1],\n      xMid = (x1 + x2) / 2,\n      yMid = (y1 + y2) / 2,\n      qs = new Array(4);\n\n  function reflectIdx(i,ref) {\n    if (ref[0]) i = f[i];\n    if (ref[1]) i = g[i];\n    return i;\n  }\n\n  qs[reflectIdx(0,rflct)] = [[x1,yMid],[xMid,y2]]\n  qs[reflectIdx(1,rflct)] = [[x1,y1],[xMid,yMid]]\n  qs[reflectIdx(2,rflct)] = [[xMid,y1],[x2,yMid]]\n  qs[reflectIdx(3,rflct)] = [[xMid,yMid],[x2,y2]]\n\n  return qs\n}\n\nfunction fillCurve(square, n, rflct = [false,false]) {\n  if (n < 1) return;\n  \n  let qs = quadrants(square, rflct)\n  if (n == 1) {\n    for (let i = 0; i < qs.length; i++)\n      ctx.lineTo(...center(...qs[i]));\n  }\n  else {\n    fillCurve(qs[0], n - 1, [!rflct[0],rflct[1]])\n    fillCurve(qs[1], n - 1, rflct)\n    fillCurve(qs[2], n - 1, rflct)\n    fillCurve(qs[3], n - 1, [rflct[0],!rflct[1]])\n  }\n}\n\nlet input = document.getElementById('iter')\ninput.onclick = (e) => drawNthCurve(e.target.value);\ndrawNthCurve(input.value)\n/*\nrecursion(n)\nouter:\n  i = 0\ninner:\n  i++\n  if (i < n)\n    divide into quadrants with orientation\n    foreach quadrant call self\n    moveTo \"bottomleft\",\n    line around quadrant points\n\n\n*/\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}